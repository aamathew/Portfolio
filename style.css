/* CSS code snippet that sets some styling rules for all elements on a web page. */
/* * selects all elements on the page.
margin: 0; sets the margin property to 0, which removes any margins around the elements. 
padding: 0; sets the padding property to 0, which removes any padding within the elements. 
font-family: 'Poppins', sans-serif; sets the font-family property to 'Poppins', which is a specific font. If 'Poppins' is not available, the browser will fall back to a sans-serif font.
box-sizing: border-box; sets the box-sizing property to border-box,the specified width and height values will include the padding and border, rather than expanding the element's dimensions. */

*{
    margin:  0;
    padding: 0;
    font-family: 'Poppins',sans-serif ;
    box-sizing: border-box;
}
/* Background color for website */
body{
    background: #080808;
    color: #fff;
}

/* Properties for header */
#header{
    width: 100%;
    height: 100vh;
    background-image: url(images/nyc.png);
    background-size: cover;
    background-position: center;
}
/* 
selects the elements with the class "container". Classes are used to group and style multiple elements on a web page. */
/* sets the padding property of the "container" elements to 10px on the top and bottom, and 10% of the container's width on the left and right. */
.container{
    padding: 10px 10%;
}
/* <nav> element is typically used to represent a section of a webpage that contains navigation links.
display: flex; sets the display property to flex.
This allows the <nav> element and its child elements to be laid out using flexbox, which provides flexible and responsive alignment and positioning capabilities.
Sets the align-items property to center. This aligns the child elements vertically within the <nav> element, ensuring they are centered along the cross-axis.
justify-content: space-between; sets the justify-content property to space-between. This distributes the child elements horizontally within the <nav> element, pushing the first element to the left edge and the last element to the right edge, with equal space between each element.
flex-wrap: wrap; sets the flex-wrap property to wrap. This allows the child elements of the <nav> element to wrap onto multiple lines if they exceed the width of the container, ensuring that all elements are visible and properly laid out. */

nav{
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
}
/* display: inline-block; - The <li> elements will be displayed as inline blocks. This allows them to appear horizontally next to each other.
list-style: none; - The default bullet points or numbering that is typically displayed for list items will be removed.
margin: 10px 20px; - The margin around the <li> elements will be set to 10 pixels on the top and bottom, and 20 pixels on the left and right. This provides spacing between the list items. */

nav ul li{
    display: inline-block;
    list-style: none;
    margin: 10px  20px;
}

/* targets the <a> elements that are descendants of <li> elements within <ul> elements, which in turn are descendants of the <nav> element. It sets the following CSS rules:
color: red; - The text color of the <a> elements will be set to red.
text-decoration: none; - The default underline or strike-through decoration for the text within the <a> elements will be removed.
font-size: 20px; - The font size of the text within the <a> elements will be set to 20 pixels.
position: relative; - The <a> elements will be positioned relative to their normal position within the document flow. This allows for further positioning adjustments using pro */
nav ul li a{
    color: white;
    text-decoration: none;
    font-size: 20px;
    position: relative;
}
/* targets the pseudo-element ::after of the <a> elements that are descendants of <li> elements within <ul> elements, which in turn are descendants of the <nav> element. It sets the following CSS rules for the pseudo-element:
content: ''; - The pseudo-element will have no content.
width: 0; - The width of the pseudo-element will be set to 0 pixels.
height: 5px; - The height of the pseudo-element will be set to 5 pixels.
background: #fff; - The background color of the pseudo-element will be white.
position: absolute; - The pseudo-element will be positioned absolutely, relative to its nearest positioned ancestor.
left: 0; - The pseudo-element will be positioned flush with the left edge of its containing element.
bottom: -6px; - The pseudo-element will be positioned 6 pixels above the bottom edge of its containing element.
transition: 0.3s; - The transition property will be applied with a duration of 0.3 seconds, allowing for smooth animations when the pseudo-element's properties change. */
nav ul li a::after{
    content: '';
    width: 0;
    height: 5px;
    background: #fff;
    position: absolute;
    left: 0;
    bottom: -6px;
    transition: 0.3s;
}
/* targets the ::after pseudo-element of the <a> elements when the <a> elements are being hovered over. 
width: 100%; - The width of the pseudo-element will be set to 100% of its containing element.
This rule modifies the width property of the ::after pseudo-element when the associated <a> element is being hovered over. By setting the width to 100%, the pseudo-element will extend across the entire width of its containing <a> element. */
nav ul li a:hover::after{
    width: 100%;
}
/* The code snippet you provided targets elements with the class "header-text" and sets the following CSS rules:
margin-top: 20%; - The top margin of the elements with the "header-text" class will be set to 20% of their parent container's height. This will create vertical spacing or push the elements down by 20% of the available vertical space.
font-size: 30px; - The font size of the elements with the "header-text" class will be set to 30 pixels.
These rules are applied to elements that have the "header-text" class assigned to them. By setting the top margin to 20% and the font size to 30 pixels, you can adjust the vertical spacing and the size of the text for elements with this class.  */

.header-text{
    margin-top: 20%;
    font-size: 30px;
}
/* The code snippet you provided targets the <h1> elements that are descendants of elements with the class "header-text". It sets the following CSS rules:
font-size: 60px; - The font size of the <h1> elements will be set to 60 pixels.
margin-top: 20px; - The top margin of the <h1> elements will be set to 20 pixels.
These rules are specifically applied to <h1> elements within elements that have the "header-text" class assigned to them. By setting the font size to 60 pixels and the top margin to 20 pixels, you can adjust the size and spacing of the <h1> elements within the "header-text" elements. */

.header-text h1{
    font-size: 60px;
    margin-top: 20px;
}
/* targets the <span> elements that are descendants of <h1> elements, which in turn are descendants of elements with the class "header-text". It sets the following CSS rule:
color: #ff004f; - The text color of the <span> elements will be set to a specific shade of pink (#ff004f).
These rules specifically apply to <span> elements within <h1> elements, which are further nested within elements that have the "header-text" class assigned to them. By setting the text color to #ff004f, you can customize the color of the text within the <span> */

.header-text h1 span{
    color: #ff004f;
}
/* About Me */
#about{
    padding: 80px 0;
    color:white
}
.row{
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}
.about-col-1{
    flex-basis: 35%;
}
.about-col-2{
    flex-basis: 60%;
}
.sub-title{
    font-size: 60px;
    font-weight: 600;
    color:#fff
}
.tab-titles{
    display:flex;
    margin: 20px 0 40px;
}
.tab-links{
    margin: 50px;
    font-size: 20px;
    font-weight: 500;
    cursor: pointer;
    position: relative;

}
.tab-links::after{
    content: '';
    width: 0;
    height: 3px;
    background: #ff004f;
    position:absolute;
    left: 0;
    bottom: -8px;
    transition: 0.3s;
}
.tab-links.active-link::after{
    width: 50%;
}
.tab-contents ul li{
    list-style: none;
    margin: 10px 0;
}
.tab-contents ul li span{
    color: #ff004f;
    font-size: 14px;
}
.tab-contents{
    display: none;
}
.tab-contents.active-tab{
    display: block;
}
#portfolio{
    padding: 50px 0;
}
.project-list{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    grid-gap: 40px;
    margin-top: 50px;
}
.project{
    border-radius: 10px;
    position: relative;
    overflow: hidden;
}
.project img{
    width: 25%;
    border-radius: 10px;
    display: block;
}
.contact {
    margin-top: 2rem;
  }
  
  .contact h2 {
    text-align: center;
    margin-bottom: var(--bottom-margin-2);
  }
  
  .contact-form-container {
    max-width: 40.75rem;
    margin: 0 auto;
    padding: 0.938rem;
    border-radius: 5px;
    box-shadow: 0 3px 10px var(--secondary-shadow);
  }
  /* .submit-btn {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
    background-color: #fff;
    border: 2px solid var(--primary-color);
    border-radius: 5px;
    font-size: 1rem;
    font-weight: var(--bold-font);
    transition: var(--transition);
  } */
  /* .submit-btn:hover {
    background-color: var(--primary-color);
    border: 2px solid var(--primary-color);
    cursor: pointer;
  } */


  /* #about is the ID selector for an HTML element. It sets the following styles for the element with the ID "about":
padding: 80px 0; adds 80 pixels of padding at the top and bottom of the element.
color: blue; sets the text color of the element to blue.

.row is the class selector for an HTML element. It sets the following styles for elements with the class "row":
display: flex; makes the element a flex container.
justify-content: space-between; positions the flex items with space between them, pushing the first item to the start and the last item to the end of the container.
flex-wrap: wrap; allows flex items to wrap onto multiple lines if they exceed the container's width.

.about-col-1 and .about-col-2 are class selectors for HTML elements. They set the following styles for elements with these classes:
flex-basis specifies the initial flex basis (initial size) of the flex items.
.about-col-1 sets a flex-basis of 35%.
.about-col-2 sets a flex-basis of 60%.
css

.sub-title is the class selector for an HTML element. It sets the following styles for elements with the class "sub-title":
font-size: 60px; sets the font size to 60 pixels.
font-weight: 600; sets the font weight to 600 (semi-bold).
color: #fff; sets the text color to white.

.tab-titles is the class selector for an HTML element. It sets the following styles for elements with the class "tab-titles":
display: flex; makes the element a flex container.
margin: 20px 0 40px; sets the top margin to 20 pixels, the bottom margin to 40 pixels, and no margin on the left or right.

.tab-links is the class selector for an HTML element. It sets the following styles for elements with the class "tab-links":
margin: 50px; sets a margin of 50 pixels on all sides of the element.
font-size: 20px; sets the font size to 20 pixels.
font-weight: 500; sets the font weight to 500 (medium).
cursor: pointer; changes the cursor to a pointer when hovering over the element, indicating it is clickable.
position: relative; positions the element relative to its normal position.


.tab-links::after uses the ::after pseudo-element to add content after the element's content. It sets the following styles for the pseudo-element:
content: ''; inserts no content.
width: 0; sets the width of the pseudo-element to 0.
height: 3px; sets the height of the pseudo-element to 3 pixels.
background: #ff004f; sets the background color of the pseudo-element to a specific shade of red (#ff004f).
position: absolute; positions the pseudo-element absolutely, relative to its closest positioned ancestor.
left: 0; aligns the left edge of the pseudo-element with the left edge of its containing element.
bottom: -8px; places the bottom edge of the pseudo-element 8 pixels above the bottom edge of its containing element.
transition: 0.3s; adds a transition effect to the pseudo-element with a duration of 0.3 seconds.

.tab-links.active-link::after selects the pseudo-element created by the ::after selector when the element has the class "active-link". It sets the following styles for the pseudo-element in this state:
width: 50%; sets the width of the pseudo-element to 50%, effectively extending its length to half the width of its containing element.

.tab-contents ul li selects the list items within an unordered list inside an element with the class "tab-contents". It sets the following styles for those list items:
list-style: none; removes the default bullet points or numbering from the list items.
margin: 10px 0; sets a margin of 10 pixels on the top and bottom of each list item.

.tab-contents ul li span selects the <span> elements within the list items within an unordered list inside an element with the class "tab-contents". It sets the following styles for those <span> elements:
color: #ff004f; sets the text color to a specific shade of red (#ff004f).
font-size: 14px; sets the font size to 14 pixels.

.tab-contents selects elements with the class "tab-contents". It sets the following styles for those elements:

display: none; initially hides the elements by setting their display property to none.
.tab-contents.active-tab selects elements with both the classes "tab-contents" and "active-tab". It sets the following styles for those elements:

display: block; displays the elements as block-level elements, making them visible.

#portfolio is the ID selector for an HTML element. It sets the following styles for the element with the ID "portfolio":
padding: 50px 0; adds 50 pixels of padding at the top and bottom of the element.

.project-list is the class selector for an HTML element. It sets the following styles for elements with the class "project-list":
display: grid; makes the element a grid container.
grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); defines the columns of the grid. It uses the repeat() function to automatically fit as many columns as possible with a minimum width of 250 pixels and a maximum width of 1fr (equal distribution of available space).
grid-gap: 40px; sets a gap of 40 pixels between grid cells.
margin-top: 50px; adds a top margin of 50 pixels to the element.

.project is the class selector for an HTML element. It sets the following styles for elements with the class "project":
border-radius: 10px; adds a border radius of 10 pixels, giving the element rounded corners.
position: relative; positions the element relative to its normal position.
overflow: hidden; clips any content that exceeds the size of the element, hiding the overflow.

.project img selects the <img> elements within an element with the class "project". It sets the following styles for those <img> elements:
width: 25%; sets the width of the images to 25% of their containing element, scaling them down.
border-radius: 10px; adds a border radius of 10 pixels, giving the images rounded corners.
display: block; makes the images display as block-level elements, allowing for additional positioning and styling.

.contact is the class selector for an HTML element. It sets the following style for elements with the class "contact":
margin-top: 2rem; adds a top margin of 2rem (or 2 times the size of the font used) to the element.

.contact h2 selects the <h2> elements within an element with the class "contact". It sets the following styles for those <h2> elements:
text-align: center; centers the text horizontally within the element.
margin-bottom: var(--bottom-margin-2); sets the bottom margin to a custom CSS variable --bottom-margin-2. The actual value of the variable will determine the specific margin.

.contact-form-container is the class selector for an HTML element. It sets the following styles for elements with the class "contact-form-container":
max-width: 40.75rem; sets the maximum width of the element to 40.75rem.
margin: 0 auto; centers the element horizontally by setting the left and right margins to auto.
padding: 0.938rem; adds padding of 0.938rem (or 0.938 times the size of the font used) to the element.
border-radius: 5px; adds a border radius of 5 pixels, giving the element rounded corners.
box-shadow: 0 3px 10px var(--secondary-shadow); adds a box shadow to the element. The specific shadow style is determined by the value of the CSS variable --secondary-shadow.

.submit-btn is the class selector for an HTML element. It sets the following styles for elements with the class "submit-btn":
width: 100%; sets the width of the element to 100% of its containing element.
padding: 10px; adds padding of 10 pixels to the element.
margin: 10px 0; sets the top and bottom margins to 10 pixels and the left and right margins to 0.
background-color: #fff; sets the background color of the element to white.
border: 2px solid var(--primary-color); sets a 2-pixel solid border around the element. The specific border color is determined by the value of the CSS variable --primary-color.
border-radius: 5px; adds a border radius of 5 pixels, giving the element rounded corners.
font-size: 1rem; sets the font size to 1rem (or 1 times the size of the font used).
font-weight: var(--bold-font); sets the font weight to a custom CSS variable --bold-font. The actual value of the variable will determine the specific font weight.
transition: var(--transition); adds a transition effect to the element. The specific transition properties and durations are determined by the value of the CSS variable --transition.

.submit-btn:hover selects the element with the class "submit-btn" when the user hovers over it. It sets the following styles for that state:
background-color: var(--primary-color); changes the background color to the value of the CSS variable --primary-color when hovering.
border: 2px solid var(--primary-color); changes the border color to the value of the CSS variable --primary-color when hovering.
cursor: pointer; changes the cursor to a pointer when hovering over the element, indicating it is clickable. */


